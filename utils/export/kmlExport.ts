interface KMLLocation {
  name: string;
  placeId: string;
  coordinates?: [number, number];
  description?: string;
  address?: string;
}

export const generateKML = (locations: KMLLocation[], itineraryName: string): string => {
  const kmlContent = `<?xml version="1.0" encoding="UTF-8"?>
  <kml xmlns="http://www.opengis.net/kml/2.2">
    <Document>
      <name>${itineraryName}</name>
      <description>Generated by Yugen</description>
      ${locations
        .map(
          (location) => `
      <Placemark>
        <name>${escapeXml(location.name)}</name>
        ${location.description ? `<description>${escapeXml(location.description)}</description>` : ""}
        ${
          location.coordinates
            ? `
        <Point>
          <coordinates>${location.coordinates[1]},${location.coordinates[0]}</coordinates>
        </Point>`
            : ""
        }
        ${
          location.placeId
            ? `<ExtendedData>
          <Data name="gx_media_links">
            <value>https://maps.google.com/maps?q=place_id:${location.placeId}</value>
          </Data>
        </ExtendedData>`
            : ""
        }
      </Placemark>`
        )
        .join("\n")}
    </Document>
  </kml>`;

  return kmlContent;
};

const escapeXml = (unsafe: string): string => {
  return unsafe.replace(/[<>&'"]/g, (c) => {
    switch (c) {
      case "<":
        return "&lt;";
      case ">":
        return "&gt;";
      case "&":
        return "&amp;";
      case "'":
        return "&apos;";
      case '"':
        return "&quot;";
      default:
        return c;
    }
  });
};

export const downloadKML = (kmlContent: string, fileName: string) => {
  const blob = new Blob([kmlContent], { type: "application/vnd.google-earth.kml+xml" });
  const url = window.URL.createObjectURL(blob);
  const link = document.createElement("a");
  link.href = url;
  link.download = `${fileName}.kml`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  window.URL.revokeObjectURL(url);
};
